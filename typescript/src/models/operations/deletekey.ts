/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type DeleteKeyRequestBody = {
    /**
     * The id of the key to revoke
     */
    keyId: string;
};

/**
 * The key was successfully revoked, it may take up to 30s for this to take effect in all regions
 */
export type DeleteKeyResponseBody = {};

/** @internal */
export namespace DeleteKeyRequestBody$ {
    export type Inbound = {
        keyId: string;
    };

    export const inboundSchema: z.ZodType<DeleteKeyRequestBody, z.ZodTypeDef, Inbound> = z
        .object({
            keyId: z.string(),
        })
        .transform((v) => {
            return {
                keyId: v.keyId,
            };
        });

    export type Outbound = {
        keyId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteKeyRequestBody> = z
        .object({
            keyId: z.string(),
        })
        .transform((v) => {
            return {
                keyId: v.keyId,
            };
        });
}

/** @internal */
export namespace DeleteKeyResponseBody$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<DeleteKeyResponseBody, z.ZodTypeDef, Inbound> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteKeyResponseBody> =
        z.object({});
}
